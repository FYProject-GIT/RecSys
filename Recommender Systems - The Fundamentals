 python
Python 2.7.15rc1 (default, Nov 12 2018, 14:31:15) 
[GCC 7.3.0] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>> import pandas as pd
>>> import numpy as np
>>> import matplotlib.pyplot as plt
>>> books = pd.read_csv('Books.csv', sep=';', error_bad_lines=False, encoding="latin-1")
Skipping line 6452: expected 8 fields, saw 9
Skipping line 43667: expected 8 fields, saw 10
Skipping line 51751: expected 8 fields, saw 9

Skipping line 92038: expected 8 fields, saw 9
Skipping line 104319: expected 8 fields, saw 9
Skipping line 121768: expected 8 fields, saw 9

Skipping line 144058: expected 8 fields, saw 9
Skipping line 150789: expected 8 fields, saw 9
Skipping line 157128: expected 8 fields, saw 9
Skipping line 180189: expected 8 fields, saw 9
Skipping line 185738: expected 8 fields, saw 9

Skipping line 209388: expected 8 fields, saw 9
Skipping line 220626: expected 8 fields, saw 9
Skipping line 227933: expected 8 fields, saw 11
Skipping line 228957: expected 8 fields, saw 10
Skipping line 245933: expected 8 fields, saw 9
Skipping line 251296: expected 8 fields, saw 9
Skipping line 259941: expected 8 fields, saw 9
Skipping line 261529: expected 8 fields, saw 9

sys:1: DtypeWarning: Columns (3) have mixed types. Specify dtype option on import or set low_memory=False.
>>> books = pd.read_csv('Books.csv', sep=';', error_bad_lines=False, encoding="latin-1")
Skipping line 6452: expected 8 fields, saw 9
Skipping line 43667: expected 8 fields, saw 10
Skipping line 51751: expected 8 fields, saw 9

Skipping line 92038: expected 8 fields, saw 9
Skipping line 104319: expected 8 fields, saw 9
Skipping line 121768: expected 8 fields, saw 9

Skipping line 144058: expected 8 fields, saw 9
Skipping line 150789: expected 8 fields, saw 9
Skipping line 157128: expected 8 fields, saw 9
Skipping line 180189: expected 8 fields, saw 9
Skipping line 185738: expected 8 fields, saw 9

Skipping line 209388: expected 8 fields, saw 9
Skipping line 220626: expected 8 fields, saw 9
Skipping line 227933: expected 8 fields, saw 11
Skipping line 228957: expected 8 fields, saw 10
Skipping line 245933: expected 8 fields, saw 9
Skipping line 251296: expected 8 fields, saw 9
Skipping line 259941: expected 8 fields, saw 9
Skipping line 261529: expected 8 fields, saw 9

>>> books.columns = ['ISBN', 'bookTitle', 'bookAuthor', 'yearOfPublication', 'publisher', 'imageUrlS', 'imageUrlM', 'imageUrlL']
>>> users = pd.read_csv('BX-Users.csv', sep=';', error_bad_lines=False, encoding="latin-1")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/sagar/.local/lib/python2.7/site-packages/pandas/io/parsers.py", line 678, in parser_f
    return _read(filepath_or_buffer, kwds)
  File "/home/sagar/.local/lib/python2.7/site-packages/pandas/io/parsers.py", line 440, in _read
    parser = TextFileReader(filepath_or_buffer, **kwds)
  File "/home/sagar/.local/lib/python2.7/site-packages/pandas/io/parsers.py", line 787, in __init__
    self._make_engine(self.engine)
  File "/home/sagar/.local/lib/python2.7/site-packages/pandas/io/parsers.py", line 1014, in _make_engine
    self._engine = CParserWrapper(self.f, **self.options)
  File "/home/sagar/.local/lib/python2.7/site-packages/pandas/io/parsers.py", line 1708, in __init__
    self._reader = parsers.TextReader(src, **kwds)
  File "pandas/_libs/parsers.pyx", line 384, in pandas._libs.parsers.TextReader.__cinit__
  File "pandas/_libs/parsers.pyx", line 695, in pandas._libs.parsers.TextReader._setup_parser_source
IOError: File BX-Users.csv does not exist
>>> users = pd.read_csv('users.csv', sep=';', error_bad_lines=False, encoding="latin-1")
>>> users.columns = ['userID', 'Location', 'Age']
>>> ratings = pd.read_csv('BX-Book-Ratings.csv', sep=';', error_bad_lines=False, encoding="latin-1")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/sagar/.local/lib/python2.7/site-packages/pandas/io/parsers.py", line 678, in parser_f
    return _read(filepath_or_buffer, kwds)
  File "/home/sagar/.local/lib/python2.7/site-packages/pandas/io/parsers.py", line 440, in _read
    parser = TextFileReader(filepath_or_buffer, **kwds)
  File "/home/sagar/.local/lib/python2.7/site-packages/pandas/io/parsers.py", line 787, in __init__
    self._make_engine(self.engine)
  File "/home/sagar/.local/lib/python2.7/site-packages/pandas/io/parsers.py", line 1014, in _make_engine
    self._engine = CParserWrapper(self.f, **self.options)
  File "/home/sagar/.local/lib/python2.7/site-packages/pandas/io/parsers.py", line 1708, in __init__
    self._reader = parsers.TextReader(src, **kwds)
  File "pandas/_libs/parsers.pyx", line 384, in pandas._libs.parsers.TextReader.__cinit__
  File "pandas/_libs/parsers.pyx", line 695, in pandas._libs.parsers.TextReader._setup_parser_source
IOError: File BX-Book-Ratings.csv does not exist
>>> ratings.columns = ['userID', 'ISBN', 'bookRating']
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'ratings' is not defined
>>> ratings = pd.read_csv('ratings.csv', sep=';', error_bad_lines=False, encoding="latin-1")
>>> ratings.columns = ['userID', 'ISBN', 'bookRating']
>>> 
>>> print(ratings.shape)
(1149780, 3)
>>> print(list(ratings.columns))
['userID', 'ISBN', 'bookRating']
>>> ratings.head()
   userID        ISBN  bookRating
0  276725  034545104X           0
1  276726  0155061224           5
2  276727  0446520802           0
3  276729  052165615X           3
4  276729  0521795028           6
>>> plt.rc("font", size=15)
>>> ratings.bookRating.value_counts(sort=False).plot(kind='bar')
<matplotlib.axes._subplots.AxesSubplot object at 0x7f2af585f190>
>>> plt.title('Rating Distribution\n')
Text(0.5,1,u'Rating Distribution\n')
>>> plt.xlabel('Rating')
Text(0.5,0,u'Rating')
>>> plt.ylabel('Count')
Text(0,0.5,u'Count')
>>> plt.savefig('system1.png', bbox_inches='tight')
>>> plt.show()
>>> print(books.shape)
(271360, 8)
>>> print(list(books.columns))
['ISBN', 'bookTitle', 'bookAuthor', 'yearOfPublication', 'publisher', 'imageUrlS', 'imageUrlM', 'imageUrlL']
>>> books.head()
  ...
0 ...
1 ...
2 ...
3 ...
4 ...

[5 rows x 8 columns]
>>> print(users.shape)
(278858, 3)
>>> print(list(users.columns))
['userID', 'Location', 'Age']
>>> users.head()
   userID                            Location   Age
0       1                  nyc, new york, usa   NaN
1       2           stockton, california, usa  18.0
2       3     moscow, yukon territory, russia   NaN
3       4           porto, v.n.gaia, portugal  17.0
4       5  farnborough, hants, united kingdom   NaN
>>> users.Age.hist(bins=[0, 10, 20, 30, 40, 50, 100])
<matplotlib.axes._subplots.AxesSubplot object at 0x7f2af5853c10>
>>> plt.title('Age Distribution\n')
Text(0.5,1,u'Age Distribution\n')
>>> plt.xlabel('Age')
Text(0.5,0,u'Age')
>>> plt.ylabel('Count')
Text(0,0.5,u'Count')
>>> plt.savefig('system2.png', bbox_inches='tight')
>>> plt.show()
>>> rating_count = pd.DataFrame(ratings.groupby('ISBN')['bookRating'].count())
V>>> rating_count.sort_values('bookRating', ascending=False).head()V
  File "<stdin>", line 1
    rating_count.sort_values('bookRating', ascending=False).head()V
                                                                  ^
SyntaxError: invalid syntax
>>> rating_count = pd.DataFrame(ratings.groupby('ISBN')['bookRating'].count())
>>> rating_count.sort_values('bookRating', ascending=False).head()
            bookRating
ISBN                  
0971880107        2502
0316666343        1295
0385504209         883
0060928336         732
0312195516         723
>>> most_rated_books = pd.DataFrame(['0971880107', '0316666343', '0385504209', '0060928336', '0312195516'], index=np.arange(5), columns = ['ISBN'])
>>> most_rated_books_summary = pd.merge(most_rated_books, books, on='ISBN')
>>> most_rated_books_summary
  ...
0 ...
1 ...
2 ...
3 ...
4 ...

[5 rows x 8 columns]
>>> average_rating = pd.DataFrame(ratings.groupby('ISBN')['bookRating'].mean())
>>> average_rating['ratingCount'] = pd.DataFrame(ratings.groupby('ISBN')['bookRating'].count())
>>> average_rating.sort_values('ratingCount', ascending=False).head()
            bookRating  ratingCount
ISBN                               
0971880107    1.019584         2502
0316666343    4.468726         1295
0385504209    4.652322          883
0060928336    3.448087          732
0312195516    4.334716          723
>>> counts1 = ratings['userID'].value_counts()
>>> ratings = ratings[ratings['userID'].isin(counts1[counts1 >= 200].index)]
>>> counts = ratings['bookRating'].value_counts()
>>> ratings = ratings[ratings['bookRating'].isin(counts[counts >= 100].index)]
>>> ratings_pivot = ratings.pivot(index='userID', columns='ISBN').bookRating
^[[B^[[A^[[B>>> userID = ratings_pivot.index
>>> ISBN = ratings_pivot.columns
>>> print(ratings_pivot.shape)
(905, 207699)
>>> ratings_pivot.head()
ISBN     0330299891   0375404120    ...      cn113107  Ô½crosoft
userID                              ...                         
254             NaN          NaN    ...           NaN        NaN
2276            NaN          NaN    ...           NaN        NaN
2766            NaN          NaN    ...           NaN        NaN
2977            NaN          NaN    ...           NaN        NaN
3363            NaN          NaN    ...           NaN        NaN

[5 rows x 207699 columns]
>>> 
>>> bones_ratings = ratings_pivot['0316666343']
>>> similar_to_bones = ratings_pivot.corrwith(bones_ratings)
/home/sagar/.local/lib/python2.7/site-packages/numpy/lib/function_base.py:3175: RuntimeWarning: Degrees of freedom <= 0 for slice
  c = cov(x, y, rowvar)
/home/sagar/.local/lib/python2.7/site-packages/numpy/lib/function_base.py:3109: RuntimeWarning: divide by zero encountered in double_scalars
  c *= 1. / np.float64(fact)

^[[A
^CTraceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/sagar/.local/lib/python2.7/site-packages/pandas/core/frame.py", line 6670, in corrwith
    return this.apply(other.corr, axis=axis)
  File "/home/sagar/.local/lib/python2.7/site-packages/pandas/core/frame.py", line 6014, in apply
    return op.get_result()
  File "/home/sagar/.local/lib/python2.7/site-packages/pandas/core/apply.py", line 318, in get_result
    return super(FrameRowApply, self).get_result()
  File "/home/sagar/.local/lib/python2.7/site-packages/pandas/core/apply.py", line 142, in get_result
    return self.apply_standard()
  File "/home/sagar/.local/lib/python2.7/site-packages/pandas/core/apply.py", line 248, in apply_standard
    self.apply_series_generator()
  File "/home/sagar/.local/lib/python2.7/site-packages/pandas/core/apply.py", line 277, in apply_series_generator
    results[i] = self.f(v)
  File "/home/sagar/.local/lib/python2.7/site-packages/pandas/core/series.py", line 1911, in corr
    min_periods=min_periods)
  File "/home/sagar/.local/lib/python2.7/site-packages/pandas/core/nanops.py", line 77, in _f
    return f(*args, **kwargs)
  File "/home/sagar/.local/lib/python2.7/site-packages/pandas/core/nanops.py", line 753, in nancorr
    valid = notna(a) & notna(b)
  File "/home/sagar/.local/lib/python2.7/site-packages/pandas/core/dtypes/missing.py", line 333, in notna
    res = isna(obj)
  File "/home/sagar/.local/lib/python2.7/site-packages/pandas/core/dtypes/missing.py", line 106, in isna
    return _isna(obj)
  File "/home/sagar/.local/lib/python2.7/site-packages/pandas/core/dtypes/missing.py", line 120, in _isna_new
    return _isna_ndarraylike(obj)
  File "/home/sagar/.local/lib/python2.7/site-packages/pandas/core/dtypes/missing.py", line 220, in _isna_ndarraylike
    result = np.isnan(values)
KeyboardInterrupt
>>> books_corr_to_bones = pd.DataFrame(['0312291639', '0316601950', '0446610038', '0446672211', '0385265700', '0345342968', '0060930535', '0375707972', '0684872153'], 
...                                   index=np.arange(9), columns=['ISBN'])
>>> corr_books = pd.merge(books_corr_to_bones, books, on='ISBN')
>>> corr_books
  ...
0 ...
1 ...
2 ...
3 ...
4 ...
5 ...
6 ...
7 ...
8 ...

[9 rows x 8 columns]
>>> print(corr_books)
  ...
0 ...
1 ...
2 ...
3 ...
4 ...
5 ...
6 ...
7 ...
8 ...

[9 rows x 8 columns]
>>> print(corr_books)
  ...
0 ...
1 ...
2 ...
3 ...
4 ...
5 ...
6 ...
7 ...
8 ...

[9 rows x 8 columns]
>>> 
